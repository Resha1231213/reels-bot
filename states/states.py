@router.message(FinalGenerateState.upload_voice, F.voice | F.audio)
async def handle_voice(msg: Message, state: FSMContext):
    user_id = msg.from_user.id
    media_dir = Path(f"media/{user_id}")
    media_dir.mkdir(parents=True, exist_ok=True)

    voice_path = media_dir / "voice.ogg"

    if msg.voice:
        duration = msg.voice.duration
        if duration > 20:
            await msg.answer("‚ùå –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –±–æ–ª–µ–µ 20 —Å–µ–∫—É–Ω–¥.")
            return
        await msg.voice.download(destination=voice_path)

    elif msg.audio:
        if msg.audio.duration and msg.audio.duration > 20:
            await msg.answer("‚ùå –ê—É–¥–∏–æ—Ñ–∞–π–ª —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –±–æ–ª–µ–µ 20 —Å–µ–∫—É–Ω–¥.")
            return
        await msg.audio.download(destination=voice_path)

    else:
        await msg.answer("‚ùå –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–º–µ–Ω–Ω–æ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –∞—É–¥–∏–æ—Ñ–∞–π–ª.")
        return

    await state.update_data(voice=str(voice_path))

    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π"), KeyboardButton(text="üá¨üáß English")]
        ],
        resize_keyboard=True
    )

    await msg.answer("üåê –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ –æ–∑–≤—É—á–∫–∏:", reply_markup=keyboard)
    await state.set_state(FinalGenerateState.select_language)
