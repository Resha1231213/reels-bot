from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InputMediaPhoto
from aiogram.fsm.context import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import StateFilter
from aiogram.fsm.state import StatesGroup, State
import os
from pathlib import Path

router = Router()

# FSM —Å–æ—Å—Ç–æ—è–Ω–∏—è
class AvatarState(StatesGroup):
    waiting_for_avatar = State()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"
def get_continue_keyboard():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", callback_data="continue_avatar")]
    ])

# –ü—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ç–æ
def get_user_avatar_path(user_id):
    path = Path(f"media/{user_id}/avatar")
    path.mkdir(parents=True, exist_ok=True)
    return path

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start –∏–ª–∏ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∞–≤–∞—Ç–∞—Ä"
@router.message(F.text == "üßë –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∞–≤–∞—Ç–∞—Ä")
async def ask_for_avatar(message: Message, state: FSMContext):
    await state.set_state(AvatarState.waiting_for_avatar)
    await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∏–ª–∏ —Å–µ–ª—Ñ–∏, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∞–≤–∞—Ç–∞—Ä. –ú–æ–∂–Ω–æ –¥–æ 5 —à—Ç—É–∫.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ —Ñ–æ—Ç–æ
@router.message(AvatarState.waiting_for_avatar, F.photo)
async def save_avatar_photo(message: Message, state: FSMContext):
    user_id = message.from_user.id
    photo = message.photo[-1]
    path = get_user_avatar_path(user_id)

    # –°—á–∏—Ç–∞–µ–º —É–∂–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ —Ñ–æ—Ç–æ
    existing_photos = list(path.glob("*.jpg"))
    if len(existing_photos) >= 5:
        await message.answer("–í—ã —É–∂–µ –∑–∞–≥—Ä—É–∑–∏–ª–∏ 5 —Ñ–æ—Ç–æ. –ù–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å'.")
